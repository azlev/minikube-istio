apiVersion: v1
data:
  job.py: |+
    import logging
    import os
    import sys


    def main(filename, jobs, index):
        f = open(filename)
        size = os.stat(f.fileno()).st_size
        chunk = size // jobs
        start = chunk * index
        end = start + chunk

        # TODO: revist this
        if index == (jobs - 1):
            end = size

        logging.info(f'file: {filename}, size: {size}, chunk: {chunk}, start: {start}, end: {end}\n')
        if logging.root.level == logging.DEBUG:
            debugchunk(f, start, end)

        lines = getlines(f, start, end)
        for line in lines:
            print(line)


    def getlines(f, start, end):
        # seek first line to be processed
        f.seek(start)
        while True:
            # beginning of the file
            if start == 0:
                break
            c = f.read(1)
            start += 1
            # start at the end of file, so we finished
            if c == '':
                return
            elif c == '\n':
                break

        # adjust last line
        f.seek(end)
        while True:
            c = f.read(1)
            end += 1
            if c == '' or c == '\n':
                break

        if logging.root.level == logging.DEBUG:
            debugchunk(f, start, end)

        # now return line by line
        f.seek(start)
        line = []
        while start <= end:
            c = f.read(1)
            start += 1
            if c == '':
                if len(line) > 0:
                    yield ''.join(line)
                break
            if c == '\n':
                yield ''.join(line)
                line = []
            else:
                line.append(c)


    def debugchunk(f, start, end):
            d = []
            pos = f.tell()
            f.seek(start)
            for _ in range(0, end - start):
                d.append(f.read(1))
            logging.debug('---')
            logging.debug(''.join(d))
            logging.debug('---')
            f.seek(pos)

    if __name__ == '__main__':
        if len(sys.argv) > 2:
            logging.root.level = logging.DEBUG

        filename = sys.argv[1]
        jobs = int(os.environ['NJOBS'])
        index = int(os.environ['JOB_COMPLETION_INDEX'])
        main(filename, jobs, index)

kind: ConfigMap
metadata:
  creationTimestamp: "2024-07-27T11:05:35Z"
  name: job.py
  namespace: indexed-job
  resourceVersion: "1079731"
  uid: 00a613c4-7b95-4c2e-8431-09f71348882a
